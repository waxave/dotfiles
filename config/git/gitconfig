[user]
  name = Jesús Urias
  email = example@pm.me
[alias]
  # Staging
  a = add
  aa = add --all

  # Branch
  br = branch
  branch-name = rev-parse --abbrev-ref HEAD
  branch-diff = diff master...HEAD
  branch-files = "!git diff master...HEAD --name-status | sed '/^D/d ; s/^.\\s\\+//'"

  # Commit
  c = commit
  ca = commit -a
  cm = commit -m
  cal = !git add -A && git commit              # Commit all changes
  cam = commit -am
  cne = commit --no-edit
  amend = commit --amend
  amend-all = !git add --all && git commit --amend --reuse-message=HEAD

  # Clone
  cl = clone
  sclone = clone --depth=1

  # Checkout
  co = checkout
  cb = checkout -b

  # Cherry-pick
  cp = cherry-pick

  # Diff
  d = diff --color-words
  dc = diff --cached
  df = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

  # Merge
  m = merge

  # Pull
  up = pull
  plom = pull origin master
  plum = pull upstream master
  preb = !git fetch upstream && git rebase upstream/master

  # Push
  p = push
  pom = push origin master
  poh = push origin head

  # Stash
  st = stash
  stp = stash pop

  # Status/Logging
  s = status
  ss = status -sb
  hist = log --graph --pretty=custom           # Show custom graph
  l = log --pretty=custom                      # Show custom log
  ll = log --stat --abbrev-commit
  lc = shortlog --summary --numbered           # List contributors

  # Reset
  unstage = reset HEAD --                      # Mixed reset (affects HEAD and Index)
  undo = reset --soft HEAD~1                   # Undo last commit (affects HEAD only)
  reset = reset --hard HEAD~1                  # Remove last commit (from HEAD, Index and Working Dir)

  # Remote
  r = remote -v

  # Submodules
  subpl = submodule update --init --recursive

  # Misc
  publish = "!git push --set-upstream origin $(git branch-name)"

# So much color
[color]
  ui = always

[color "branch"]
  current = green bold
  local = green
  remote = yellow

[color "diff"]
  frag = magenta
  meta = yellow
  new = green
  old = red

[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = "red bold 52"
  newNormal = "green bold"
  newHighlight = "green bold 22"

[color "status"]
  added = green reverse
  changed = yellow reverse
  untracked = red reverse

# Git mergetool
[merge]
  tool = opendiff

[core]
  editor = nano
  abbrev = 12
  attributesfile = ~/.gitattributes
  excludesfile = ~/.gitignore
  autocrlf = input
  mergeoptions = --no-edit
  ignorecase = false

[pager]
  # Insanely beautiful diffs ==> npm install -g diff-so-fancy
  diff = diff-so-fancy | less --tabs=4 -RFX
  show = diff-so-fancy | less --tabs=4 -RFX

[diff "bin"]
  # Use `hexdump` to diff binary files
  textconv = hexdump -v -C

[pretty]
  custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
  #                     │        │            │            │             └─ author name
  #                     │        │            │            └─ message
  #                     │        │            └─ date (relative)
  #                     │        └─ decorations (branch, heads or tags)
  #                     └─ hash (abbreviated)

[help]
  # Correct typos
  autocorrect = 1

# Rewrites of repo paths
[url "git@github.com:"]
  insteadOf = "gh:"
  insteadOf = "git://github.com"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
  pushInsteadOf = "https://github.com/"

[url "git://github.com/"]
  insteadOf = "github:"

[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
  pushInsteadOf = "https://gist.github.com/"

[url "git://gist.github.com/"]
  insteadOf = "gist:"

# Push easily http://stackoverflow.com/a/23918418/89484
[push]
  # Make `git push` automatically push relevant
  # annotated tags when pushing branches out
  followTags = true
  default = current

# Use separate file for username / github token / etc
[include]
  path = ~/.gitconfig.local

[filter "lfs"]
  clean = git lfs clean %f
  smudge = git lfs smudge %f
  required = true

[fetch]
  prune = true
[init]
	defaultBranch = main
